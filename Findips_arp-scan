#!/bin/bash
#====================================================
#   SCRIPT:                   FIND IP'S - ARP-SCAN
#   DESARROLLADO POR:         JENN VALENTINE 
#   FECHA DE ACTUALIZACIÃ“N:  01-04-2024 
#   CONTACTO POR TELEGRAMA:   https://t.me/JennValentine
#   GITHUB OFICIAL:           https://github.com/JennValentine/Findips
#====================================================

# Paleta de colores
reset="\033[0m"       # Restablecer todos los estilos y colores

# Colores de texto
black="\033[0;30m"     # Negro
red="\033[0;31m"       # Rojo
green="\033[0;32m"     # Verde
yellow="\033[0;33m"    # Amarillo
blue="\033[0;34m"      # Azul
magenta="\033[0;35m"   # Magenta
cyan="\033[0;36m"      # Cian
white="\033[0;37m"     # Blanco

# Iconos
checkmark="${green}[++]${reset}"
error="${red}[--]${reset}"
info="${yellow}[**]${reset}"
process="${magenta}[>>]${reset}"
indicator="${red}==>${reset}"

# Barra de separación
barra="${blue}|--------------------------------------------|${reset}"

# Comprobación de permisos de root
[[ "$(whoami)" != "root" ]] && {
    echo -e "\n${yellow}[${red}Error${yellow}] ${white}- ${yellow}Necesitas ejecutar esto como administrador (root)${reset}"
    echo -e "\n${green} sudo $0 ${reset}"
    exit 0
}

Acciones() {
    echo -e "\n${info} ${green}Buscando Ip's Activas en la red ...\n"

    # Obtener la dirección IP y la dirección MAC
    ip=$(ip addr | grep inet | grep -v inet6 | grep -v "host lo" | awk '{print $2}' | awk -F "/" '{print $1}')
    mac=$(ip addr | grep link/ether | awk '{print $2}')

    # Mostrar el tipo de escaneo de red, la dirección IP y la dirección MAC
    echo -ne "${indicator} ${green}Escaneo de red:     ${white}arp-scan\n"
    echo -ne "${indicator} ${green}Dirección IP:       ${white}$ip\n"
    echo -ne "${indicator} ${green}Dirección MAC:      ${white}$mac\n"

    # Obtener el rango de red
    interface=$(ip route show default | awk '/default/ {print $5}')
    network=$(ip route | grep $interface | awk '{print $1}')

    # Mostrar el rango de red
    echo -ne "${indicator} ${green}Rango de Red:       ${white}$network\n\n"

    # Realizar el escaneo de la red
    scan_results=$(arp-scan --localnet --interface=$interface)

    # Eliminar las líneas que contienen información de la interfaz
    scan_results=$(echo "$scan_results" | sed "/Interface: $interface/d")

    # Eliminar las líneas que no contienen una dirección IP válida
    scan_results=$(echo "$scan_results" | grep -E "(([0-9]{1,3}\.){3}[0-9]{1,3})")

    # Inicializar variable para almacenar la salida formateada
    formatted_output=""

    # Iterar sobre cada línea de los resultados del escaneo
    while IFS= read -r line; do
        # Extraer la IP y la MAC de la línea
        ip=$(echo "$line" | awk '{print $1}')
        mac=$(echo "$line" | awk '{print $2}')

        # Desarrollador 
        #fab=$(echo "$line" | awk '{print $3}')
        
        fab=$(echo "$line" | awk '{$1=$2=""; print $0}' | sed 's/^[ \t]*//')


        # Ejecutar ping para obtener el TTL
        ttl=$(ping -c 1 -n -W 1 "$ip" 2>/dev/null | grep "ttl=" | awk -F 'ttl=' '{print $2}' | awk '{print $1}')

        # Determinar el sistema operativo
        if [[ $ttl -le 64 && $ttl -ge 1 ]]; then
            os="Linux"
        elif [[ $ttl -ge 65 && $ttl -le 128 ]]; then
            os="Windows"
        elif [[ $ttl -ge 129 && $ttl -le 191 ]]; then
            os="macOS"
        elif [[ $ttl -ge 192 && $ttl -le 254 ]]; then
            os="Cisco IOS"
        else
            os="Unknown"
        fi

        # Agregar la línea formateada a la salida
        formatted_output+="${ttl}\t${os}\t${ip}\t${mac}\t${fab}\n"
    done <<< "$scan_results"

    # Mostrar la salida formateada
    echo -e "${blue}Ip's Activas:\n"
    echo -e "${cyan}TTL\tOS\tIP Address\tMAC Address\t\tFabricante"
    echo -e "${green}$formatted_output"
    echo -e "\n${checkmark} ${green} Escaneo finalizado"

    echo -e "\n${yellow}${info} ${white}GITHUB OFICIAL: ${green}https://github.com/JennValentine/Findips\n"
    echo -e "$barra"
}

# Llamar a la función Acciones
Acciones

# Fin del script
